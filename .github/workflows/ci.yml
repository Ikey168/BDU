name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Lint and test frontend
  frontend-checks:
    name: Frontend Checks
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'frontend/') || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run frontend linting
        run: |
          cd frontend
          npm run lint
          
      - name: Run frontend tests
        run: |
          cd frontend
          npm run test
          
      - name: Build frontend
        run: |
          cd frontend
          npm run build

  # Lint and test workers
  workers-checks:
    name: Workers Checks
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'workers/') || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: workers/package-lock.json
          
      - name: Install workers dependencies
        run: |
          cd workers
          npm ci
          
      - name: Run workers linting
        run: |
          cd workers
          npm run lint
          
      - name: Run workers tests
        run: |
          cd workers
          npm run test
          
      - name: Type check workers
        run: |
          cd workers
          npm run type-check

  # Security and dependency checks
  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # All checks must pass
  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [frontend-checks, workers-checks, security-checks]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.frontend-checks.result }}" != "success" && "${{ needs.frontend-checks.result }}" != "skipped" ]]; then
            echo "Frontend checks failed"
            exit 1
          fi
          if [[ "${{ needs.workers-checks.result }}" != "success" && "${{ needs.workers-checks.result }}" != "skipped" ]]; then
            echo "Workers checks failed"
            exit 1
          fi
          if [[ "${{ needs.security-checks.result }}" != "success" ]]; then
            echo "Security checks failed"
            exit 1
          fi
          echo "All checks passed!"
